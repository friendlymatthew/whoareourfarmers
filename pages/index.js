import Head from "next/head";
import styles from "@/styles/Home.module.css";
import React, { useState, useEffect } from "react";

const axios = require("axios");

import { masterVarList, clean } from "@/pond/variables";
import { masterCateList } from "@/pond/category";

export default function Home() {
	const [cateList, setCateList] = useState(null);
	const [varList, setVarList] = useState(null);

	const [query, setQuery] = useState({});

	const [cateQuery, setCateQuery] = useState("");

	useEffect(() => {
		console.log("varlist:", clean(masterVarList));

		setVarList(clean(masterVarList));

		axios
			.get(
				"https://api.ers.usda.gov/data/arms/surveydata?api_key=nV3cvYlV9oRt7tXtlXD2wSKft7Z6k5EO3r1z2Sab",
				{
					params: {
						year: [2015, 2016],
						state: "all",
						report: "income statement",
						farmtype: "operator households",
						category: "collapsed farm typology",
						category_value: "commercial",
					},
				}
			)
			.then(function (response) {
				setCateList(response.data.data);
				console.log("this is data", response);
			})
			.catch(function (error) {
				console.log(error.message);
			})
			.finally(function () {
				// always executed
			});
	}, []);

	const renderList = (data) => {
		if (data) {
			return data.map(({ id, name, description }) => {
				return (
					<button
						className="border-[#14234b] border rounded-md text-[#14234b] "
						key={id}
						onClick={() => {
							setCateQuery(id);
						}}
					>
						{name}
					</button>
				);
			});
		}
	};

	const handleClear = () => {
		setCateQuery("");
	};
	return (
		<>
			<Head>
				<title>Create Next App</title>
				<meta name="description" content="Generated by create next app" />
				<meta name="viewport" content="width=device-width, initial-scale=1" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<main className="bg-white text-black min-h-screen">
				<button onClick={handleClear}>Go Back</button>

				<div>Category of Interest: {cateQuery}</div>
				<div>
					{masterCateList.map(({ id, name, description, subcategories }) => {
						return (
							<div key={id} className="my-8">
								<div>{name}</div>
								{subcategories ? (
									<div>
										{subcategories.map(({ id, name, description }) => {
											return (
												<div key={name} className="my-1">
													{name}
												</div>
											);
										})}
									</div>
								) : (
									<></>
								)}
							</div>
						);
					})}
				</div>
			</main>
		</>
	);
}
